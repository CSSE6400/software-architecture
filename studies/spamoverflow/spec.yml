openapi: 3.0.3
info:
  title: SpamOverflow
  description: |
    An API service for scanning malicious emails and providing reports on malicious actors, their targets, and link domains that are used.

    Notes: It is common for users to have email aliases, e.g. example@uq.edu.au could have an alias of example+csse6400@uq.edu.au.
           We will treat these as separate email addresses and not the same.
  contact:
    name: CSSE6400
    url: https://csse6400.uqcloud.net
    email: noreply@uq.edu.au
  version: 1.0.0
servers:
- url: http://email.api.spamoverflow.com/api/v1
tags:
- name: email
  description: Malicious email service
paths:
  /health:
    get:
      tags:
      - email
      summary: Query the health of the service.
      description: |
        The health endpoint is useful for determining whether an instance is still healthy.
        This can help if you are configuring auto-scaling groups or load balancers.

        We do not specify the response payload for this endpoint,
        however you may find it useful to return a more detailed status of your system.
        For example: https://eloquentcode.com/rest-api-design-health-check-endpoint
      responses:
        200:
          description: Service is healthy.
          content: {}
        500:
          description: Service is not healthy.
          content: {}
        503:
          description: Service is not healthy.
          content: {}
  /customers/{customer_id}/emails:
    get:
      tags:
      - email
      summary: List all submitted emails for a given customer.
      description: |
        Returns a list of all emails submitted for the given customer id with the optional filters applied. The limit and offset parameters are used for stepping through blocks of emails / paging through the results. If the offset is greater than the amount of entries that exist then an empty array should be returned.
        
        If there are no emails associated with the given customer id, an empty array should be returned.

        All other parameters are used to filter the results and should be applied before the limit and offset parameters. e.g. if 300 emails exists and 200 are labelled as malicious then a request of limit=100 and only_malicious=true should return 100 emails. If limit=100, only_malicious=true, and offset=200 then the response should be 0 emails (an empty array).

        **The filters are additive and as such if the filter is not in the request then it should not be applied. e.g. if only_malicious=true is not in the request then all emails should be returned regardless of their malicious status. The exception to this is the limit and offset parameters which have defaults which are applied if they are not in the request.**
      parameters:
      - name: customer_id
        in: path
        description: The customer identifier is a UUIDv4.
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: Returns only this many results, 0 < limit <= 1000. **Default is 100**.
        schema:
          type: integer
          minimum: 1
          maximum: 1000
          default: 100
        example: 20
      - name: offset
        in: query
        description: Skip this many results before returning, 0 <= offset. **Default is 0**.
        schema:
          type: integer
          minimum: 0
          default: 0
        example: 0
      - name: start
        in: query
        description: |
          Only return emails submitted from this date.
          The date should be in RFC3339 format.
        schema:
          type: string
          format: date-time
          example: 2024-02-21T13:10:05Z
      - name: end
        in: query
        description: |
          Only return emails submitted before this date.
          The date should be in RFC3339 format.
        schema:
          type: string
          format: date-time
          example: 2024-02-21T14:10:05Z
      - name: from
        in: query
        description: |
          Only return emails submitted from this email address.
          The email address should be in the format of user@domain.
        schema:
          type: string
          format: email
          example: 'no-reply@uq.edu.au'
      - name: to
        in: query
        description: |
          Only return emails submitted to this email address.
          The email address should be in the format of user@domain.
        schema:
          type: string
          format: email
          example: 'support@uq.edu.au'
      - name: state
        in: query
        description: |
          Only return emails with this state.
          The state should be one of 'pending', 'scanned', 'failed'.
        schema:
          type: string
          enum:
            - pending
            - scanned
            - failed
        example: 'scanned'
      - name: only_malicious
        in: query
        description: |
          Only return emails that have been flagged as malicious.
        schema:
          type: boolean
          example: true
      responses:
        200:
          description: List of all emails, with the filters applied.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Email'
        400:
          description: |
            Invalid customer_id or query parameters.

            Return value is not specified but should describe the error.
        500:
          description: |
            An unknown error occurred trying to process the request.

            Return value is not specified but should describe the error.
    post:
      tags:
      - email
      summary: Post a new email scan request.
      description: |
        If the customer account does not exist, it will be created. The customer's ID identifies if the request must have a high priority or not, see the description in the parameters section.
      parameters:
      - name: customer_id
        in: path
        description: The customer identifier is a UUIDv4 where the first 4 characters represent the customer type. Customers with 1111####-####-####-####-############ are to be treated as high priority while all other valid UUIDv4's are to be treated as standard priority.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailPost'
        required: true
      responses:
        201:
          description: The Email scan request has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        400:
          description: |
            Body/Path parameter was malformed or invalid.

            Return value is not specified but should describe the error.
          content: {}
        500:
          description: |
            An unknown error occurred trying to process the request.

            Return value is not specified but should describe the error.
      x-codegen-request-body-name: body
  /customers/{customer_id}/emails/{id}:
    get:
      tags:
      - email
      summary: Get information for a particular email.
      description: |
        Returns a representation of an email for a customer with the status of the scan and its result. 
      parameters:
      - name: customer_id
        in: path
        description: The customer identifier is a UUIDv4.
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The email identifier that was returned when the request was created.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Information about the requested email message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        400:
          description: |
            Body/Path parameter was malformed or invalid.

            Return value is not specified but should describe the error.
          content: {}
        404:
          description: |
            The requested email for the customer does not exist. If a customer does not exist for the given customer_id then the response will be a 404.

            Return value is not specified but should describe the error.
          content: {}
        500:
          description: |
            An unknown error occurred trying to process the request.

            Return value is not specified but should describe the error.
  /customers/{customer_id}/reports/actors:
    get:
      tags:
      - email
      summary: Get malicious senders of emails.
      description: |
        Returns a list of all senders/actors identified as sending at least one email that is flagged as malicious. This report should be kept up-to-date with a maximum of five minutes delay.
      parameters:
      - name: customer_id
        in: path
        description: The customer identifier is a UUIDv4.
        required: true
        schema:
          type: string
      responses:
        200:
          description: List of all senders/actors identified as sending at least one email that is flagged as malicious.
          content:
            application/json:
              schema:
                type: object
                example:
                  generated_at: "2024-02-21T13:10:05Z"
                  total: 1
                  data:
                    - id: "no-reply@uq.edu.au"
                      count: 256
                properties:
                  generated_at:
                    type: string
                    format: date-time
                    description: The date and time the report was generated in RFC3339 format. If the report is being made live then this should be the current date and time.
                    example: 2024-02-21T13:10:05Z
                  total:
                    type: integer
                    description: The number of entries in the list.
                    minimum: 0
                  data:
                    type: array
                    description: The list of actors identified as sending at least one malicious email.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Email address of the sender of malicious email.
                        count:
                          type: integer
                          description: The number of email messages, which have been identified as malicious, that this actor has sent.
                          minimum: 1
        500:
          description: |
            An unknown error occurred trying to process the request.

            Return value is not specified but should describe the error.
  /customers/{customer_id}/reports/recipients:
    get:
      tags:
      - email
      summary: Get users who have received malicious emails.
      description: |
        Returns a list of all recipients who have received at least one email message that is identified as malicious. This report should be kept up-to-date with a maximum of five minutes delay.
      parameters:
      - name: customer_id
        in: path
        description: The customer identifier is a UUIDv4. 
        required: true
        schema:
          type: string
      responses:
        200:
          description: List of all recipients, who are associated with this customer, who have received malicious email.
          content:
            application/json:
              schema:
                type: object
                example:
                  generated_at: "2024-02-21T13:10:05Z"
                  total: 1
                  data:
                    - id: "support@uq.edu.au"
                      count: 10000
                properties:
                  generated_at:
                    type: string
                    format: date-time
                    description: The date and time the report was generated in RFC3339 format. If the report is being made live then this should be the current date and time.
                    example: 2024-02-21T13:10:05Z
                  total:
                    type: integer
                    description: The number of entries in the list.
                    minimum: 0
                  data:
                    type: array
                    description: The list of recipients who have received at least one email message that is identified as malicious.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Email address of the recipient of the malicious email.
                        count:
                          type: integer
                          description: The number of malicious emails identified as being received by this recipient.
                          minimum: 1
        500:
          description: |
            An unknown error occurred trying to process the request.

            Return value is not specified but should describe the error.
  /customers/{customer_id}/reports/domains:
    get:
      tags:
      - email
      summary: Get the domains that appeared in malicious emails.
      description: |
        Returns a report consisting of the link domains found in malicious emails for the given customer. This report should be kept up-to-date with a maximum of five minutes delay.
      parameters:
      - name: customer_id
        in: path
        description: The customer identifier is a UUIDv4.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A report consisting of the link domains found in email messages that were identified as being malicious, for the given customer.
          content:
            application/json:
              schema:
                type: object
                example:
                  generated_at: "2024-02-21T13:10:05Z"
                  total: 2
                  data:
                    - id: "uq.edu.au"
                      count: 16
                    - id: "uq.mu"
                      count: 5
                properties:
                  generated_at:
                    type: string
                    format: date-time
                    description: The date and time the report was generated in RFC3339 format. If the report is being made live then this should be the current date and time.
                    example: 2024-02-21T13:10:05Z
                  total:
                    type: integer
                    description: The number of entries in the list.
                    minimum: 0
                  data:
                    type: array
                    description: The list of domains which were contained in email messages that were identified as being malicious.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The domain found in at least one email message that was identified as being malicious.
                        count:
                          type: integer
                          description: The number of times this domain has been seen in email messages that were identified as being malicious.
                          minimum: 1
        500:
          description: |
            An unknown error occurred trying to process the request.

            Return value is not specified but should describe the error.
 
components:
  schemas:
    Email:
      type: object
      properties:
        id:
          type: string
          description: The email message's unique identifier. This is generated by the email scanning service when the scan request is submitted.
        created_at:
          type: string
          format: date-time
          description: The date and time the email was submitted.
          example: 2024-02-21T13:10:05Z
        updated_at:
          type: string
          format: date-time
          description: The date and time the email was updated including its creation.
          example: 2024-02-21T13:10:05Z
        contents:
          type: object
          description: The contents of the email.
          properties:
            to:
              type: string
              format: email
              description: The email address <strong>to</strong> which the email was sent.
              example: "no-reply@uq.edu.au"
            from:
              type: string
              format: email
              description: The email address <strong>from</strong> which the email was sent.
              example: "support@uq.edu.au"
            subject:
              type: string
              description: The subject of the email.
              example: "Important information about your account."
        status:
          type: string
          enum:
            - pending
            - scanned
            - failed
          description: The status of the email scan.
          default: "pending"
          example: "scanned"
        malicious:
          type: boolean
          description: Whether the email was flagged as malicious.
        domains:
          type: array
          description: The domains of links found within the email body.
          items:
            type: string
            example: "scam-check.uq.edu.au"
        metadata:
          type: object
          properties:
            spamhammer:
              type: string
              description: SpamHammer metadata for this email.
              example: "1|14"
        
    EmailPost:
      type: object
      properties:
        metadata:
          type: object
          properties:
            spamhammer:
              type: string
              description: SpamHammer metadata for this email.
              example: "1|14"
        contents:
          type: object
          description: The contents of the email.
          properties:
            to:
              type: string
              format: email
              description: The email address <strong>to</strong> which the email was sent.
              example: "no-reply@uq.edu.au"
            from:
              type: string
              format: email
              description: The email address <strong>from</strong> which the email was sent.
              example: "support@uq.edu.au"
            subject:
              type: string
              description: The subject of the email.
              example: "Important information about your account."
            body:
              type: string
              description: The body of the email.
              example: "Dear customer,\nWe have noticed some suspicious activity on your account. Please click [here](https://scam-check.uq.edu.au?userId=uqehugh3) to reset your password."