@startuml ecsdeployment
    title TaskOverflow on ECS (Deployment Diagram)

    left to right direction

    !include <C4/C4_Container>
    !include <C4/C4_Context>
    !include <C4/C4_Deployment>

    !define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v14.0/dist
    !include AWSPuml/AWSCommon.puml
    !include AWSPuml/AWSC4Integration.puml
    !include AWSPuml/Groups/all.puml
    !include AWSPuml/NetworkingContentDelivery/all.puml
    !include AWSPuml/Database/all.puml
    !include AWSPuml/Compute/all.puml
    !include AWSPuml/Containers/all.puml

    skinparam PackageTitleAlignment Center
    UpdateElementStyle(Container, $bgColor="#FFFFFF", $borderColor="#d3d3d3", $fontColor="#000000")
    skinparam rectangle {
        roundCorner 25
    }
    skinparam rectangle<<RDS>> { 
        BorderColor AWS_COLOR_BLUE 
    }
    skinparam rectangle<<AuroraPostgreSQLInstance>> {
        BorderColor AWS_COLOR_BLUE
    }
    skinparam rectangle<<ElasticLoadBalancingApplicationLoadBalancer>> {
        BorderColor AWS_COLOR_PURPLE
    }
    skinparam rectangle<<Route53>> {
        BorderColor AWS_COLOR_PURPLE
    }

    AWSCloudGroup(aws, "Amazon Web Services") {
        RegionGroup(useast1, "us-east-1") {
            RDS(rds, "Amazon RDS", "Postgres 14 | db.t4g.micro | Public IP") {
                AuroraPostgreSQLInstance(postgresql-grouper, "PostgreSQL - TaskOverflow", "") {
                    ContainerDb(database, "Todo Database", "Stores the todo items for TaskOverflow.")
                }
            }

            ElasticContainerService(ecs, "Amazon ECS", "TaskOverflow Cluster") {
                ElasticContainerServiceService(taskoverflow-service, "TaskOverflow Service", "Desired count: 1 | Task definition: taskoverflow:latest") {
                    Fargate(todo-compute, "Fargate", "1 vCPU | 2GB RAM") {
                        ElasticContainerServiceTask(todo, "Todo", "Flask/Python | 1 vCPU | 2GB RAM", "Web application for TaskOverflow including static resources.")
                    }
                }
            }
        }
   }

   Rel_D(todo, database, "Connects to", "TCP/5432")

   SHOW_LEGEND(true)
@enduml